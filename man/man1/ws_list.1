.TH ws_list 1 "June 2025" "USER COMMANDS"

.SH NAME
ws_list \- list workspaces

.SH SYNOPSIS
.B ws_list
[\-h] [\-F FILESYSTEM] [\-g] [\-l] [\-L] [\-s] [\-v] [\-s] [\-r] [\-N] [\-R] [\-C] [PATTERN]

.SH DESCRIPTION
List
.B workspaces
of the calling user.
The output can be restricted to
.B workspaces
in a certain FILESYSTEM, matching a certain PATTERN, and can be sorted according to different criterias.

.B PATTERN
is a unix glob expression, * matches all characters, please be aware that quoting might be required
by your shell.


The idea of the
.B workspace
is to allow the administrator to keep control of filespace in working filesystems,
and to avoid the situations that data of past and finished projects/jobs is idling for
ever on disks. A user can create and dispose arbitrary number of workspaces, they are cheap,
and can be created e.g. for each job.

From the system side,
.B workspaces
will be deleted after beeing expired. A friendly user can release workspaces before the expiration
date using
.B ws_release
which will mark the
.B workspace
for future deletion.

Deletion is probably a task done once a night and not immediately.

If a
.B workspace
was forgotten and expired, it might make sense to contact the administrator,
as he probaly can restore a workspace for some time, if disk space is not low.
Check if
.ws_restore
is available allowing you to restore workspaces on your own.

.PP

.SH OPTIONS
.TP
\-h
display usage help text
.TP
\-l
list the available filesystems, only filesystems the user has list access to will be shown.
The shown order is the order workspaces are searched in, from top to bottom.
.TP
\-L
list the available filesystems you have list access for with properties like maximum duration and number of extensions granted
as well as retention time after expiration or release, as well as permissions like right to allocate, extend and restore to.
Add
.B -v
to see an explanation of the fields.
.TP
\-F
select the filesystem to list the workspaces from.
.TP
\-g
show group-workspaces visible for current group in addition to own workspaces.
You can extend visible workspace in behalf of the owner if the workspace is writable,
either as it was created with
.B ws_allocate -G <groupname>
or because it was made
writable later with
.B chmod
. See
.B ws_allocate
manpage for details.
.TP
\-s
short listing, only workspace names will be listed.
.TP
\-t
terse listing, less information is shown
.TP
\-v
verbose listing, all information is shown
.TP
\-N
sort according to names of workspaces
.TP
\-R
sort according to remaining time of workspaces
.TP
\-C
sort according to creation date of workspaces
.TP
\-r
invert the sorting of \-N, \-C or \-R

.SH EXAMPLES
.TP
list all workspaces, unsorted:
.B ws_list
.TP
list available filesystems:
.B ws_list -l
.TP
list all workspaces, sorted by remaining time, shortest first:
.B ws_list -R
.TP
list all workspaces, sorted by creation time, oldest last:
.B ws_list -R -r
list a specific workspace
.B ws_list my_workspace
list workspaces staring with "experiment"
.B ws_list "experiment*"
.TP

.SH AUTHOR
Written by Holger Berger

.SH SEE ALSO
ws_stat, ws_allocate, ws_release, ws_restore, ws_find
